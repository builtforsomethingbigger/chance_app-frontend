{"ast":null,"code":"var _jsxFileName = \"/Users/builtforsomethingbigger/Development/code/FINAL-PROJECT/chance-frontend/src/components/UserProfile.js\";\nimport React from 'react';\nimport DonationBar from './DonationBar';\nimport '../styles/UserProfile.css';\nimport '../styles/Donations.css';\nexport default class UserProfile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bgColors: ['red', 'blue', 'yellow', 'yellowgreen', 'lightgreen', 'turquoise']\n    };\n\n    this.randomColor = color => {\n      const allColors = [...this.state.bgColors];\n      const colorPicker = color[Math.floor(Math.random() * color.length)];\n      this.setState({\n        bgColor: allColors.filter(color => color !== colorPicker)\n      });\n      return colorPicker;\n    };\n\n    this.allDonations = () => {\n      return this.props.donations.filter(donation => donation.user_id === this.props.currentUser.id);\n    };\n\n    this.totalDonations = id => {\n      const allDonations = this.props.donations.filter(donation => donation.user_id === id);\n      const totalDonations = allDonations.map(donation => donation.donation_amount);\n      const sum = totalDonations.reduce(function (a, b) {\n        return a + b;\n      }, 0);\n      return sum;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"userProfile\",\n      style: {\n        display: this.props.display ? \"inline-block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 22\n      }\n    }, this.props.currentUser.username)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profileInfoRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, \"FIRST NAME\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, this.props.currentUser.first_name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profileInfoRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, \"LAST NAME\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, this.props.currentUser.last_name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profileInfoRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, \"EMAIL ADDRESS\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, this.props.currentUser.email_address)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profileInfoRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \"TOTAL DONATIONS\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \"$\", this.totalDonations(this.props.currentUser.id))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"userDonationBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      width: \"100%\",\n      border: \"0\",\n      cellPadding: \"0\",\n      cellSpacing: \"0\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, this.allDonations().map(donation => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(DonationBar, Object.assign({\n      key: donation.id\n    }, donation, {\n      color: this.randomColor(this.state.bgColors),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }\n    })))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/builtforsomethingbigger/Development/code/FINAL-PROJECT/chance-frontend/src/components/UserProfile.js"],"names":["React","DonationBar","UserProfile","Component","state","bgColors","randomColor","color","allColors","colorPicker","Math","floor","random","length","setState","bgColor","filter","allDonations","props","donations","donation","user_id","currentUser","id","totalDonations","map","donation_amount","sum","reduce","a","b","render","display","username","first_name","last_name","email_address"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,2BAAP;AACA,OAAO,yBAAP;AAEA,eAAe,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAAyC;AAAA;AAAA;AAAA,SAEpDC,KAFoD,GAE5C;AACJC,MAAAA,QAAQ,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,aAA1B,EAAyC,YAAzC,EAAuD,WAAvD;AADN,KAF4C;;AAAA,SAMpDC,WANoD,GAMrCC,KAAD,IAAW;AACrB,YAAMC,SAAS,GAAG,CAAC,GAAG,KAAKJ,KAAL,CAAWC,QAAf,CAAlB;AACA,YAAMI,WAAW,GAAGF,KAAK,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcL,KAAK,CAACM,MAA/B,CAAD,CAAzB;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAEP,SAAS,CAACQ,MAAV,CAAiBT,KAAK,IAAIA,KAAK,KAAKE,WAApC;AADC,OAAd;AAGA,aAAOA,WAAP;AACH,KAbmD;;AAAA,SAepDQ,YAfoD,GAerC,MAAM;AACjB,aAAO,KAAKC,KAAL,CAAWC,SAAX,CAAqBH,MAArB,CAA4BI,QAAQ,IAAIA,QAAQ,CAACC,OAAT,KAAqB,KAAKH,KAAL,CAAWI,WAAX,CAAuBC,EAApF,CAAP;AACH,KAjBmD;;AAAA,SAmBpDC,cAnBoD,GAmBlCD,EAAD,IAAQ;AACrB,YAAMN,YAAY,GAAG,KAAKC,KAAL,CAAWC,SAAX,CAAqBH,MAArB,CAA4BI,QAAQ,IAAIA,QAAQ,CAACC,OAAT,KAAqBE,EAA7D,CAArB;AACA,YAAMC,cAAc,GAAGP,YAAY,CAACQ,GAAb,CAAiBL,QAAQ,IAAIA,QAAQ,CAACM,eAAtC,CAAvB;AACA,YAAMC,GAAG,GAAGH,cAAc,CAACI,MAAf,CAAsB,UAASC,CAAT,EAAYC,CAAZ,EAAc;AAC5C,eAAOD,CAAC,GAAGC,CAAX;AACH,OAFW,EAET,CAFS,CAAZ;AAGA,aAAOH,GAAP;AACH,KA1BmD;AAAA;;AA6BpDI,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,EAAE,EAAC,aAAR;AAAsB,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,KAAKd,KAAL,CAAWc,OAAX,GAAqB,cAArB,GAAsC;AAAhD,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKd,KAAL,CAAWI,WAAX,CAAuBW,QAA5B,CAAL,CADJ,eAEI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKf,KAAL,CAAWI,WAAX,CAAuBY,UAA3B,CAFJ,CAFJ,eAMI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKhB,KAAL,CAAWI,WAAX,CAAuBa,SAA3B,CAFJ,CANJ,eAUI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKjB,KAAL,CAAWI,WAAX,CAAuBc,aAA3B,CAFJ,CAVJ,eAcI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAK,KAAKZ,cAAL,CAAoB,KAAKN,KAAL,CAAWI,WAAX,CAAuBC,EAA3C,CAAL,CAFJ,CAdJ,eAkBI;AAAK,MAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,KAAK,EAAC,MAAb;AAAoB,MAAA,MAAM,EAAC,GAA3B;AAA+B,MAAA,WAAW,EAAC,GAA3C;AAA+C,MAAA,WAAW,EAAC,GAA3D;AAA+D,MAAA,KAAK,EAAC,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKN,YAAL,GAAoBQ,GAApB,CAAwBL,QAAQ,iBAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,QAAQ,CAACG;AAA3B,OAAmCH,QAAnC;AAA6C,MAAA,KAAK,EAAE,KAAKd,WAAL,CAAiB,KAAKF,KAAL,CAAWC,QAA5B,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ,CADJ,CADH,CADD,CADJ,CADJ,CAlBJ,CADJ;AAgCH;;AA9DmD","sourcesContent":["import React from 'react'\nimport DonationBar from './DonationBar'\nimport '../styles/UserProfile.css';\nimport '../styles/Donations.css';\n\nexport default class UserProfile extends React.Component{\n\n    state = {\n        bgColors: ['red', 'blue', 'yellow', 'yellowgreen', 'lightgreen', 'turquoise']\n    }\n\n    randomColor = (color) => {\n        const allColors = [...this.state.bgColors]\n        const colorPicker = color[Math.floor(Math.random()*color.length)]\n        this.setState({\n            bgColor: allColors.filter(color => color !== colorPicker)\n        })\n        return colorPicker\n    }\n\n    allDonations = () => {\n        return this.props.donations.filter(donation => donation.user_id === this.props.currentUser.id)\n    }\n\n    totalDonations = (id) => {\n        const allDonations = this.props.donations.filter(donation => donation.user_id === id)\n        const totalDonations = allDonations.map(donation => donation.donation_amount)\n        const sum = totalDonations.reduce(function(a, b){\n            return a + b;\n        }, 0);\n        return sum\n    }\n\n\n    render(){\n        return(\n            <div id=\"userProfile\" style={{display: this.props.display ? \"inline-block\" : \"none\"}}>\n                <div><h1>{this.props.currentUser.username}</h1></div>\n                <div className=\"profileInfoRow\">\n                    <h3>FIRST NAME</h3>\n                    <p>{this.props.currentUser.first_name}</p>\n                </div>\n                <div className=\"profileInfoRow\">\n                    <h3>LAST NAME</h3>\n                    <p>{this.props.currentUser.last_name}</p>\n                </div>\n                <div className=\"profileInfoRow\">\n                    <h3>EMAIL ADDRESS</h3>\n                    <p>{this.props.currentUser.email_address}</p>\n                </div>\n                <div className=\"profileInfoRow\">\n                    <h3>TOTAL DONATIONS</h3>\n                    <p>${this.totalDonations(this.props.currentUser.id)}</p>\n                </div>\n                <div id=\"userDonationBar\">\n                    <table width=\"100%\" border=\"0\" cellPadding=\"0\" cellSpacing=\"0\" align=\"center\">\n                        <tbody>\n                        {this.allDonations().map(donation => \n                            <tr>\n                                <td><DonationBar key={donation.id} {...donation} color={this.randomColor(this.state.bgColors)}/></td>\n                            </tr>\n                        )}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}