{"ast":null,"code":"var _jsxFileName = \"/Users/builtforsomethingbigger/Development/code/FINAL-PROJECT/chance-frontend/src/App.js\";\nimport React from 'react';\nimport { LoginPage, HomePage, Nav, UserProfile, CharitiesPage, CharityCard, Inbox } from './components';\nimport { Route, Switch } from 'react-router-dom';\nimport './styles/App.css';\nconst charityAPI = 'http://localhost:3000/charities';\nconst userAPI = 'http://localhost:3000/users';\nconst donationAPI = 'http://localhost:3000/donations';\nconst favoritesAPI = 'http://localhost:3000/favorites';\nconst messageAPI = 'http://localhost:3000/messages';\nconst inboxAPI = 'http://localhost:3000/inboxes';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: {},\n      users: [],\n      charities: [],\n      donations: [],\n      favorites: [],\n      messages: [],\n      inboxes: [],\n      selectedCharity: {},\n      charityCard: false\n    };\n\n    this.currentUser = () => {\n      fetch(`${userAPI}/5`).then(res => res.json()).then(currentUser => this.setState({\n        currentUser\n      }));\n    };\n\n    this.newUser = user => {\n      this.setState({\n        currentUser: user\n      });\n    };\n\n    this.fetchAllUsers = () => {\n      fetch(userAPI).then(res => res.json()).then(users => this.setState({\n        users\n      }));\n    };\n\n    this.fetchAllCharities = () => {\n      fetch(charityAPI).then(res => res.json()).then(charities => this.setState({\n        charities\n      }));\n    };\n\n    this.fetchAllDonations = () => {\n      fetch(donationAPI).then(res => res.json()).then(donations => this.setState({\n        donations\n      }));\n    };\n\n    this.fetchAllFavorites = () => {\n      fetch(favoritesAPI).then(res => res.json()).then(favorites => this.setState({\n        favorites\n      }));\n    };\n\n    this.fetchAllMessages = () => {\n      fetch(messageAPI).then(res => res.json()).then(messages => this.setState({\n        messages\n      }));\n    };\n\n    this.fetchAllInboxes = () => {\n      fetch(inboxAPI).then(res => res.json()).then(inboxes => this.setState({\n        inboxes\n      }));\n    };\n\n    this.addNewUser = newUser => {\n      this.setState({\n        users: [...this.state.users, newUser],\n        currentUser: newUser\n      });\n    };\n\n    this.showLoginPage = e => {\n      if (this.state.loginPage === false) {\n        this.setState({\n          loginPage: true\n        });\n      } else {\n        this.setState({\n          loginPage: false\n        });\n      }\n    };\n\n    this.showCharityCard = id => {\n      const findCharity = this.state.charities.find(charity => charity.id === id);\n\n      if (this.state.charityCard === false) {\n        this.setState({\n          selectedCharity: findCharity,\n          charityCard: true\n        });\n      }\n    };\n\n    this.hideCharityCard = e => {\n      this.setState({\n        charityCard: false\n      });\n    };\n\n    this.newDonation = donation => {\n      this.setState({\n        donations: [...this.state.donations, donation]\n      });\n    };\n\n    this.handleFavoriteClick = (id, boolean) => {\n      if (boolean === true) {\n        this.setState({\n          favorites: [...this.state.favorites, id]\n        });\n      } else {\n        let newFavorites = this.state.favorites.filter(favorites => favorites.id !== id);\n        this.setState({\n          favorites: newFavorites\n        });\n      }\n    };\n\n    this.handlePostMsgClick = message => {\n      this.setState({\n        messages: [...this.state.messages, { ...message,\n          user: this.state.currentUser\n        }]\n      });\n    };\n  }\n\n  /* FETCHES */\n  componentDidMount() {\n    this.currentUser();\n    this.fetchAllUsers();\n    this.fetchAllCharities();\n    this.fetchAllDonations();\n    this.fetchAllFavorites();\n    this.fetchAllMessages();\n    this.fetchAllInboxes();\n  }\n\n  render() {\n    if (!this.state.currentUser) return '';\n    const inbox = this.state.inboxes.find(inbox => inbox.user_id === this.state.currentUser.id);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      currentUser: this.state.currentUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"homepage_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/search\",\n      render: routerProps => /*#__PURE__*/React.createElement(HomePage, Object.assign({}, routerProps, {\n        currentUser: this.state.currentUser,\n        allUsers: this.state.users,\n        charities: this.state.charities,\n        donations: this.state.donations,\n        newDonation: this.newDonation,\n        favorites: this.state.favorites,\n        favClick: this.handleFavoriteClick,\n        charityCard: this.showCharityCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/profile\",\n      render: routerProps => /*#__PURE__*/React.createElement(UserProfile, Object.assign({}, routerProps, {\n        currentUser: this.state.currentUser,\n        charities: this.state.charities,\n        donations: this.state.donations,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/charities/:id\",\n      name: \"charity\",\n      render: routerProps => {\n        const charityID = parseInt(routerProps.match.params.id); // console.log()\n\n        return /*#__PURE__*/React.createElement(CharityCard, Object.assign({}, routerProps, {\n          display: this.state.charityCard,\n          charID: charityID,\n          currentUser: this.state.currentUser,\n          charity: this.state.charities.find(charity => charity.id === charityID),\n          allUsers: this.state.users,\n          charities: this.state.charities,\n          favorites: this.state.favorites,\n          favClick: this.handleFavoriteClick,\n          newDonation: this.newDonation,\n          onClick: this.hideCharityCard,\n          postEvent: this.postEvent,\n          inboxes: this.state.inboxes,\n          submitResponse: this.handlePostMsgClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 22\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/charities\",\n      render: routerProps => /*#__PURE__*/React.createElement(CharitiesPage, Object.assign({}, routerProps, {\n        currentUser: this.state.currentUser,\n        charities: this.state.charities,\n        donations: this.state.donations,\n        favorites: this.state.favorites,\n        charityCard: this.showCharityCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/inbox\",\n      render: routerProps => /*#__PURE__*/React.createElement(Inbox, Object.assign({}, routerProps, {\n        currentUser: this.state.currentUser,\n        allUsers: this.state.users,\n        inbox: this.showInbox,\n        display: this.state.inbox,\n        userInbox: inbox,\n        messages: this.state.messages,\n        postMsg: this.handlePostMsgClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(LoginPage, {\n        loginPage: this.showLoginPage,\n        allUsers: this.state.users,\n        display: this.state.loginPage,\n        currentUser: this.newUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/builtforsomethingbigger/Development/code/FINAL-PROJECT/chance-frontend/src/App.js"],"names":["React","LoginPage","HomePage","Nav","UserProfile","CharitiesPage","CharityCard","Inbox","Route","Switch","charityAPI","userAPI","donationAPI","favoritesAPI","messageAPI","inboxAPI","App","Component","state","currentUser","users","charities","donations","favorites","messages","inboxes","selectedCharity","charityCard","fetch","then","res","json","setState","newUser","user","fetchAllUsers","fetchAllCharities","fetchAllDonations","fetchAllFavorites","fetchAllMessages","fetchAllInboxes","addNewUser","showLoginPage","e","loginPage","showCharityCard","id","findCharity","find","charity","hideCharityCard","newDonation","donation","handleFavoriteClick","boolean","newFavorites","filter","handlePostMsgClick","message","componentDidMount","render","inbox","user_id","routerProps","charityID","parseInt","match","params","postEvent","showInbox"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { LoginPage, HomePage, Nav, UserProfile, CharitiesPage, CharityCard, Inbox } from './components';\nimport { Route, Switch } from 'react-router-dom';\nimport './styles/App.css';\n\nconst charityAPI = 'http://localhost:3000/charities'\nconst userAPI = 'http://localhost:3000/users'\nconst donationAPI = 'http://localhost:3000/donations'\nconst favoritesAPI = 'http://localhost:3000/favorites'\nconst messageAPI = 'http://localhost:3000/messages'\nconst inboxAPI = 'http://localhost:3000/inboxes'\n\nexport default class App extends React.Component{\n\n  state = {\n    currentUser: {},\n    users: [],\n    charities: [],\n    donations: [],\n    favorites: [],\n    messages: [],\n    inboxes: [],\n    selectedCharity: {},\n    charityCard: false\n  }\n\n  /* FETCHES */\n  componentDidMount(){\n    this.currentUser()\n    this.fetchAllUsers()\n    this.fetchAllCharities()\n    this.fetchAllDonations()\n    this.fetchAllFavorites()\n    this.fetchAllMessages()\n    this.fetchAllInboxes()\n  }\n  currentUser = () => {\n    fetch(`${userAPI}/5`)\n    .then(res => res.json())\n    .then(currentUser => this.setState({ currentUser }))\n  }\n  newUser = (user) => {\n    this.setState({\n      currentUser: user\n    })\n  }\n  fetchAllUsers = () => {\n    fetch(userAPI)\n    .then(res => res.json())\n    .then(users => this.setState({ users })\n    ) \n  }\n  fetchAllCharities = () => {\n    fetch(charityAPI)\n    .then(res => res.json())\n    .then(charities => this.setState({ charities })\n    ) \n  }\n  fetchAllDonations = () => {\n    fetch(donationAPI)\n    .then(res => res.json())\n    .then(donations => this.setState({ donations })\n    ) \n  }\n  fetchAllFavorites = () => {\n    fetch(favoritesAPI)\n    .then(res => res.json())\n    .then(favorites => this.setState({ favorites })\n    ) \n  }\n  fetchAllMessages = () => {\n    fetch(messageAPI)\n    .then(res => res.json())\n    .then(messages => this.setState({ messages })\n    ) \n  }\n  fetchAllInboxes = () => {\n    fetch(inboxAPI)\n    .then(res => res.json())\n    .then(inboxes => this.setState({ inboxes })\n    ) \n  }\n  addNewUser = (newUser) => {\n    this.setState({\n      users: [...this.state.users, newUser],\n      currentUser: newUser\n    })\n  }\n  \n  /* LOG IN FUNCTIONS */\n  showLoginPage = e => {\n    if(this.state.loginPage === false){\n      this.setState({\n        loginPage: true\n      })\n    }else{\n      this.setState({\n        loginPage: false\n      })\n    }\n  }\n  \n  /* CHARITY CARD FUNCTIONS */\n  showCharityCard = (id) => {\n    const findCharity = this.state.charities.find(charity => charity.id === id)\n    if (this.state.charityCard === false){\n      this.setState({\n        selectedCharity: findCharity,\n        charityCard: true\n      })\n    }\n  }\n  hideCharityCard = e => {\n    this.setState({\n      charityCard: false\n    })\n  }\n\n  /* DONATION FUNCTIONS */\n  newDonation = (donation) => {\n    this.setState({\n      donations: [...this.state.donations, donation]\n    })\n  }\n\n  /* FAVORITE FUNCTIONS */\n  handleFavoriteClick = (id, boolean) => {\n    if(boolean === true){\n      this.setState({\n        favorites: [...this.state.favorites, id]\n      })\n    }else{\n      let newFavorites = this.state.favorites.filter(favorites => favorites.id !== id)\n      this.setState({\n        favorites: newFavorites\n      })\n    }\n  }\n\n  /* MESSAGE FUNCTIONS */\n  handlePostMsgClick = (message) => {\n    this.setState({\n      messages: [...this.state.messages, {...message, user: this.state.currentUser}]\n    })\n  }\n\n\n  render(){\n    if(!this.state.currentUser) return ''\n    const inbox = this.state.inboxes.find(inbox => inbox.user_id === this.state.currentUser.id)\n    return (\n      <div className=\"App\">\n        <Nav currentUser={this.state.currentUser} />\n        <div id=\"homepage_wrapper\">\n          <Switch>\n            <Route path='/search'  render={(routerProps) =>  \n              <HomePage {...routerProps} \n                currentUser={this.state.currentUser} \n                allUsers={this.state.users}\n                charities={this.state.charities} \n                donations={this.state.donations} \n                newDonation={this.newDonation} \n                favorites={this.state.favorites} \n                favClick={this.handleFavoriteClick}\n                charityCard={this.showCharityCard}\n              />\n            }/>\n            <Route path='/profile'  render={(routerProps) =>  \n              <UserProfile {...routerProps} \n                currentUser={this.state.currentUser}\n                charities={this.state.charities} \n                donations={this.state.donations} \n              />}\n            />\n            <Route path='/charities/:id' name='charity' render={(routerProps) => {\n              const charityID = parseInt(routerProps.match.params.id)\n              // console.log()\n              return <CharityCard {...routerProps} \n                display={this.state.charityCard} \n                charID={charityID} \n                currentUser={this.state.currentUser} \n                charity={this.state.charities.find(charity => charity.id === charityID)} \n                allUsers={this.state.users}\n                charities={this.state.charities}\n                favorites={this.state.favorites} \n                favClick={this.handleFavoriteClick}\n                newDonation={this.newDonation} \n                onClick={this.hideCharityCard} \n                postEvent={this.postEvent}\n                inboxes={this.state.inboxes}\n                submitResponse={this.handlePostMsgClick}\n              />}} \n            />\n            <Route path='/charities'  render={(routerProps) =>  \n              <CharitiesPage {...routerProps} \n                currentUser={this.state.currentUser} \n                charities={this.state.charities} \n                donations={this.state.donations} \n                favorites={this.state.favorites}\n                charityCard={this.showCharityCard}\n              />} \n            />\n            <Route path='/inbox' render={(routerProps) => \n              <Inbox {...routerProps} \n                currentUser={this.state.currentUser} \n                allUsers={this.state.users}\n                inbox={this.showInbox} \n                display={this.state.inbox}\n                userInbox={inbox}\n                messages={this.state.messages}\n                postMsg={this.handlePostMsgClick}\n              />} \n            />\n            <Route path='/' render={() => \n              <LoginPage \n                loginPage={this.showLoginPage} \n                allUsers={this.state.users}\n                display={this.state.loginPage}\n                currentUser={this.newUser}\n              />} \n            />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}