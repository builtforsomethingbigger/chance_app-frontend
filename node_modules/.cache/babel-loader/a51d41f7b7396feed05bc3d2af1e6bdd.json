{"ast":null,"code":"var _jsxFileName = \"/Users/builtforsomethingbigger/Development/code/FINAL-PROJECT/chance-frontend/src/components/Messages.js\";\nimport React from 'react';\nconst messageAPI = 'http://localhost:3000/messages';\nexport default class Messages extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message_body: '',\n      msgWindow: false\n    };\n\n    this.showMsgWindow = e => {\n      if (this.state.msgWindow) {\n        this.setState({\n          msgWindow: false\n        });\n      } else {\n        this.setState({\n          msgWindow: true\n        });\n      }\n    };\n\n    this.handleOnChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitMsg = e => {\n      e.preventDefault();\n      fetch(messageAPI, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          accept: 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: this.props.currentUser.id,\n          inbox_id: this.props.messages[0].inbox_id,\n          message_title: this.props.title,\n          message_body: this.state.message_body\n        })\n      }).then(res => res.json()).then(message => this.props.postMsg(message));\n      this.setState({\n        message_body: ''\n      });\n    };\n  }\n\n  render() {\n    const messages = this.props.messages.sort((a, b) => a.id - b.id).filter(messages => messages.message_title === this.props.title);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"messagesContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"msgTitle\",\n      onClick: this.showMsgWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, this.props.title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messageWindow msgDropdown\",\n      style: {\n        display: this.state.msgWindow ? \"inline-block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messageInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      width: \"100%\",\n      border: \"0\",\n      cellPadding: \"0\",\n      cellSpacing: \"0\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      width: \"100%\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"msgInput\",\n      type: \"text\",\n      name: \"message_body\",\n      value: this.state.message_body,\n      onChange: this.handleOnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 71\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"sendBtn\",\n      align: \"left\",\n      onClick: this.submitMsg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 41\n      }\n    }, \"SEND\")))))), this.state.message_body ? /*#__PURE__*/React.createElement(\"img\", {\n      className: \"ellipses\",\n      src: \"https://thumbs.gfycat.com/ShadowyReflectingAffenpinscher-size_restricted.gif\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 48\n      }\n    }) : '', messages.sort((a, b) => b.id - a.id).map(msgBody => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"msgBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, msgBody.user.username), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, msgBody.message_body)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/builtforsomethingbigger/Development/code/FINAL-PROJECT/chance-frontend/src/components/Messages.js"],"names":["React","messageAPI","Messages","Component","state","message_body","msgWindow","showMsgWindow","e","setState","handleOnChange","target","name","value","submitMsg","preventDefault","fetch","method","headers","accept","body","JSON","stringify","user_id","props","currentUser","id","inbox_id","messages","message_title","title","then","res","json","message","postMsg","render","sort","a","b","filter","display","map","msgBody","user","username"],"mappings":"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","sourcesContent":["import React from 'react'\n\nconst messageAPI = 'http://localhost:3000/messages'\nexport default class Messages extends React.Component{\n\n    state = {\n        message_body: '',\n        msgWindow: false\n    }\n\n    showMsgWindow = e => {\n        if(this.state.msgWindow){\n            this.setState({\n                msgWindow: false\n            })\n        }else{\n            this.setState({\n                msgWindow: true\n            })\n        }\n    }\n\n    handleOnChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    submitMsg = e => {\n        e.preventDefault()\n        fetch(messageAPI, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                accept: 'application/json'\n            },\n            body: JSON.stringify({\n                user_id: this.props.currentUser.id,\n                inbox_id: this.props.messages[0].inbox_id,\n                message_title: this.props.title,\n                message_body: this.state.message_body\n            })\n        })\n        .then(res => res.json())\n        .then(message => this.props.postMsg(message))\n        this.setState({\n            message_body: ''\n        })\n    }\n    \n    \n    render(){\n        const messages = this.props.messages\n            .sort((a,b) => a.id - b.id)\n            .filter(messages => messages.message_title === this.props.title)\n        return(\n            <div id=\"messagesContainer\">\n                <div>\n                    <h2 className=\"msgTitle\" onClick={this.showMsgWindow}>{this.props.title}</h2>\n                </div>\n                <div className=\"messageWindow msgDropdown\" style={{display: this.state.msgWindow ? \"inline-block\" : \"none\"}}>\n                    <div className=\"messageInput\">\n                        <form>\n                            <table width=\"100%\" border=\"0\" cellPadding=\"0\" cellSpacing=\"0\" align=\"center\">\n                                <tbody>\n                                    <tr>\n                                        <td width=\"100%\" align=\"left\"><input className=\"msgInput\" type=\"text\" name=\"message_body\" value={this.state.message_body} onChange={this.handleOnChange}></input></td>\n                                        <td className=\"sendBtn\" align=\"left\" onClick={this.submitMsg}>SEND</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </form>\n                    </div>\n                    {this.state.message_body ? <img className=\"ellipses\" src=\"https://thumbs.gfycat.com/ShadowyReflectingAffenpinscher-size_restricted.gif\"/> : ''}\n                    {messages.sort((a,b) => b.id - a.id).map(msgBody => \n                    <div className=\"msgBody\">\n                        <h3>{msgBody.user.username}</h3>\n                        <p>{msgBody.message_body}</p>\n                    </div>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}