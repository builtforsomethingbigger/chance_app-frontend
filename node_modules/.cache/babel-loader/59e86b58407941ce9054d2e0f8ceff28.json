{"ast":null,"code":"var _jsxFileName = \"/Users/builtforsomethingbigger/Development/code/FINAL-PROJECT/chance-frontend/src/components/UserProfile.js\";\nimport React from 'react';\nimport DonationBar from './DonationBar';\nimport '../styles/UserProfile.css';\nimport '../styles/Donations.css';\nexport default class UserProfile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bgColors: ['red', 'blue', 'green', 'lightgreen', 'yellow', 'yellowgreen', 'turquoise'],\n      display: true\n    };\n\n    this.allDonations = () => {\n      return this.props.donations.filter(donation => donation.user_id === this.props.currentUser.id);\n    };\n\n    this.calcBarContainer = () => {\n      const donations = this.allDonations();\n      const amounts = donations.map(donation => donation.donation_amount);\n      const maxDonation = Math.max.apply(null, amounts);\n      return maxDonation;\n    };\n\n    this.totalDonations = id => {\n      const allDonations = this.props.donations.filter(donation => donation.user_id === id);\n      const totalDonations = allDonations.map(donation => donation.donation_amount);\n      const sum = totalDonations.reduce(function (a, b) {\n        return a + b;\n      }, 0);\n      return sum;\n    };\n\n    this.closeUserProfile = () => {\n      this.setState({\n        display: false\n      });\n    };\n  }\n\n  render() {\n    var _this$props$currentUs;\n\n    // const username = this.props.currentUser.username\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"userProfile\",\n      style: {\n        display: this.props.userProfile ? \"inline-block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"xClose xUserProfile\",\n      onClick: this.props.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"x\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 22\n      }\n    }, (_this$props$currentUs = this.props.currentUser.username) === null || _this$props$currentUs === void 0 ? void 0 : _this$props$currentUs.toUpperCase())), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profileInfoRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, \"FIRST NAME\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, this.props.currentUser.first_name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profileInfoRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, \"LAST NAME\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, this.props.currentUser.last_name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profileInfoRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, \"EMAIL ADDRESS\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, this.props.currentUser.email_address)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profileInfoRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"TOTAL DONATIONS\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"$\", this.totalDonations(this.props.currentUser.id))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"userDonationBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, this.allDonations().sort((a, b) => a - b).map((donation, index) => /*#__PURE__*/React.createElement(DonationBar, Object.assign({\n      key: donation.id\n    }, donation, {\n      charities: this.props.charities,\n      color: this.state.bgColors[index],\n      graphWidth: this.calcBarContainer(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/builtforsomethingbigger/Development/code/FINAL-PROJECT/chance-frontend/src/components/UserProfile.js"],"names":["React","DonationBar","UserProfile","Component","state","bgColors","display","allDonations","props","donations","filter","donation","user_id","currentUser","id","calcBarContainer","amounts","map","donation_amount","maxDonation","Math","max","apply","totalDonations","sum","reduce","a","b","closeUserProfile","setState","render","userProfile","onClick","username","toUpperCase","first_name","last_name","email_address","sort","index","charities"],"mappings":"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","sourcesContent":["import React from 'react'\nimport DonationBar from './DonationBar'\nimport '../styles/UserProfile.css';\nimport '../styles/Donations.css';\n\nexport default class UserProfile extends React.Component{\n\n    state = {\n        bgColors: ['red', 'blue', 'green', 'lightgreen', 'yellow', 'yellowgreen', 'turquoise'],\n        display: true\n    }\n    \n    allDonations = () => {\n        return this.props.donations.filter(donation => donation.user_id === this.props.currentUser.id)\n    }\n\n    calcBarContainer = () => {\n        const donations = this.allDonations()\n        const amounts = donations.map(donation => donation.donation_amount)\n        const maxDonation = Math.max.apply(null, amounts)\n        return maxDonation\n    }\n\n    totalDonations = (id) => {\n        const allDonations = this.props.donations.filter(donation => donation.user_id === id)\n        const totalDonations = allDonations.map(donation => donation.donation_amount)\n        const sum = totalDonations.reduce(function(a, b){\n            return a + b;\n        }, 0);\n        return sum\n    }\n\n    closeUserProfile = () => {\n        this.setState({\n            display: false\n        })\n    }\n\n\n    render(){\n        // const username = this.props.currentUser.username\n        return(\n            <div id=\"userProfile\" style={{display: this.props.userProfile ? \"inline-block\" : \"none\"}}>\n                <div className=\"xClose xUserProfile\" onClick={this.props.onClick}>x</div>\n                <div><h1>{this.props.currentUser.username?.toUpperCase()}</h1></div>\n                <div className=\"profileInfoRow\">\n                    <h3>FIRST NAME</h3>\n                    <p>{this.props.currentUser.first_name}</p>\n                </div>\n                <div className=\"profileInfoRow\">\n                    <h3>LAST NAME</h3>\n                    <p>{this.props.currentUser.last_name}</p>\n                </div>\n                <div className=\"profileInfoRow\">\n                    <h3>EMAIL ADDRESS</h3>\n                    <p>{this.props.currentUser.email_address}</p>\n                </div>\n                <div className=\"profileInfoRow\">\n                    <h3>TOTAL DONATIONS</h3>\n                    <p>${this.totalDonations(this.props.currentUser.id)}</p>\n                </div>\n                <div id=\"userDonationBar\">\n                        {this.allDonations().sort((a,b) => a-b).map((donation, index) => \n                            <DonationBar key={donation.id} {...donation} charities={this.props.charities} color={this.state.bgColors[index]} graphWidth={this.calcBarContainer()}/>\n                        )}\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}