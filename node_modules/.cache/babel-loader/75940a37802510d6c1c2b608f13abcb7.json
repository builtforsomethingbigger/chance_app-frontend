{"ast":null,"code":"var _jsxFileName = \"/Users/builtforsomethingbigger/Development/code/FINAL-PROJECT/chance-frontend/src/components/Messages.js\";\nimport React from 'react';\nconst messageAPI = 'http://localhost:3000/messages';\nexport default class Messages extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // senders: [],\n      msgWindow: false\n    };\n\n    this.showMsgWindow = e => {\n      if (this.state.msgWindow) {\n        this.setState({\n          msgWindow: false\n        });\n      } else {\n        this.setState({\n          msgWindow: true\n        });\n      }\n    };\n\n    this.submitMsg = e => {\n      e.preventDefault();\n      fetch(messageAPI, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          accept: 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: this.props.currentUser.id,\n          inbox_id: this.props.charity.id\n        })\n      }).then(res => res.json()).then(favorite => this.props.favClick(favorite, true));\n    };\n  }\n\n  render() {\n    console.log(props);\n    const messages = this.props.messages.sort((a, b) => a.id - b.id).filter(messages => messages.message_title === this.props.title);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"messagesContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"msgTitle\",\n      onClick: this.showMsgWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, this.props.title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messageWindow msgDropdown\",\n      style: {\n        display: this.state.msgWindow ? \"inline-block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"messageInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      width: \"100%\",\n      border: \"0\",\n      cellPadding: \"0\",\n      cellSpacing: \"0\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      width: \"100%\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"msgInput\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 71\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"sendBtn\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 41\n      }\n    }, \"SEND\")))))), messages.sort((a, b) => a.id - b.id).map(msgBody => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"msgBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, msgBody.user.username), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, msgBody.message_body)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/builtforsomethingbigger/Development/code/FINAL-PROJECT/chance-frontend/src/components/Messages.js"],"names":["React","messageAPI","Messages","Component","state","msgWindow","showMsgWindow","e","setState","submitMsg","preventDefault","fetch","method","headers","accept","body","JSON","stringify","user_id","props","currentUser","id","inbox_id","charity","then","res","json","favorite","favClick","render","console","log","messages","sort","a","b","filter","message_title","title","display","map","msgBody","user","username","message_body"],"mappings":"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","sourcesContent":["import React from 'react'\n\nconst messageAPI = 'http://localhost:3000/messages'\nexport default class Messages extends React.Component{\n\n    state = {\n        // senders: [],\n        msgWindow: false\n    }\n\n    showMsgWindow = e => {\n        if(this.state.msgWindow){\n            this.setState({\n                msgWindow: false\n            })\n        }else{\n            this.setState({\n                msgWindow: true\n            })\n        }\n    }\n\n    submitMsg = e => {\n        e.preventDefault()\n        fetch(messageAPI, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                accept: 'application/json'\n            },\n            body: JSON.stringify({\n                user_id: this.props.currentUser.id,\n                inbox_id: this.props.charity.id\n            })\n        })\n        .then(res => res.json())\n        .then(favorite => this.props.favClick(favorite, true))\n    }\n    \n    \n    render(){\n        console.log(props)\n        const messages = this.props.messages\n            .sort((a,b) => a.id - b.id)\n            .filter(messages => messages.message_title === this.props.title)\n        return(\n            <div id=\"messagesContainer\">\n                <div>\n                    <h2 className=\"msgTitle\" onClick={this.showMsgWindow}>{this.props.title}</h2>\n                </div>\n                <div className=\"messageWindow msgDropdown\" style={{display: this.state.msgWindow ? \"inline-block\" : \"none\"}}>\n                    <div className=\"messageInput\">\n                        <form>\n                            <table width=\"100%\" border=\"0\" cellPadding=\"0\" cellSpacing=\"0\" align=\"center\">\n                                <tbody>\n                                    <tr>\n                                        <td width=\"100%\" align=\"left\"><input className=\"msgInput\" type=\"text\"></input></td>\n                                        <td className=\"sendBtn\" align=\"left\">SEND</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </form>\n                    </div>\n                    {messages.sort((a,b) => a.id - b.id).map(msgBody => \n                    <div className=\"msgBody\">\n                        <h3>{msgBody.user.username}</h3>\n                        <p>{msgBody.message_body}</p>\n                    </div>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}